import org.ergoplatform.appkit.cli
import org.ergoplatform.appkit.commands
import org.ergoplatform.appkit.config
import scala
import scala.collection
import typing



class HelpCmd(org.ergoplatform.appkit.commands.Cmd, scala.Product, scala.Serializable):
    def __init__(self, toolConf: org.ergoplatform.appkit.config.ErgoToolConfig, name: str, askedCmd: str): ...
    @staticmethod
    def BaseDocUrl() -> str: ...
    @staticmethod
    def apply(toolConf: org.ergoplatform.appkit.config.ErgoToolConfig, name: str, askedCmd: str) -> 'HelpCmd': ...
    def askedCmd(self) -> str: ...
    def canEqual(self, x$1: typing.Any) -> bool: ...
    @staticmethod
    def cmdParamSyntax() -> str: ...
    def copy(self, toolConf: org.ergoplatform.appkit.config.ErgoToolConfig, name: str, askedCmd: str) -> 'HelpCmd': ...
    def copy$default$1(self) -> org.ergoplatform.appkit.config.ErgoToolConfig: ...
    def copy$default$2(self) -> str: ...
    def copy$default$3(self) -> str: ...
    @staticmethod
    def createCmd(ctx: org.ergoplatform.appkit.cli.AppContext) -> org.ergoplatform.appkit.commands.Cmd: ...
    @staticmethod
    def description() -> str: ...
    @staticmethod
    def docUrl() -> str: ...
    def equals(self, x$1: typing.Any) -> bool: ...
    def hashCode(self) -> int: ...
    def name(self) -> str: ...
    @staticmethod
    def parameters() -> scala.collection.Seq[org.ergoplatform.appkit.commands.CmdParameter]: ...
    @staticmethod
    def parseArgs(ctx: org.ergoplatform.appkit.cli.AppContext, args: scala.collection.Seq[str]) -> scala.collection.Seq[typing.Any]: ...
    @staticmethod
    def printUsage(console: org.ergoplatform.appkit.cli.Console) -> org.ergoplatform.appkit.cli.Console: ...
    def productArity(self) -> int: ...
    def productElement(self, x$1: int) -> typing.Any: ...
    def productIterator(self) -> scala.collection.Iterator[typing.Any]: ...
    def productPrefix(self) -> str: ...
    def run(self, ctx: org.ergoplatform.appkit.cli.AppContext) -> None: ...
    def toString(self) -> str: ...
    def toolConf(self) -> org.ergoplatform.appkit.config.ErgoToolConfig: ...
    @staticmethod
    def unapply(x$0: 'HelpCmd') -> scala.Option[scala.Tuple3[org.ergoplatform.appkit.config.ErgoToolConfig, str, str]]: ...


class __module_protocol__(typing.Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.ergoplatform.appkit.ergotool")``.

    HelpCmd: typing.Type[HelpCmd]
